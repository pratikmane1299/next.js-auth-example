version: '3.8'

services:
  api:
    container_name: full-stack-auth-api
    build: .
    restart: always
    ports:
      - ${PORT}:${PORT}

    environment:
      PORT: ${PORT}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      DB_URL: ${DB_URL}
      DB_ROOT_USER: ${DB_ROOT_USER}
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      DB_NAME: ${DB_NAME}

    networks:
      - full-stack-auth

    depends_on:
      - db
    
    volumes:
      - ./:/usr/src/app:cached
      - npm_cache:/root/.npm:delegated
      - node_modules:/usr/src/app/node_modules:delegated

  db:
    image: mongo:latest
    restart: always
    container_name: full-stack-auth-mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}

    volumes:
      - mongodb:/data/db
      - mongoconfig:/data/configdb
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

    networks:
      - full-stack-auth

  # mongo-express:
  #   image: mongo-express
  #   container_name: mongo-dashboard
  #   restart: always
  #   ports:
  #     - 6969:6969
  #   depends_on:
  #     - db
  #   links:
  #     - db
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_ROOT_USER}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_ROOT_PASSWORD}
  #     ME_CONFIG_MONGODB_URL: ${DB_URL}

networks:
  full-stack-auth:
    driver: bridge

volumes:
  npm_cache:
  node_modules:
  mongodb:
  mongoconfig: